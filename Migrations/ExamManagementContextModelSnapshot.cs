// <auto-generated />
using System;
using ExamManagement.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExamManagement.Migrations
{
    [DbContext(typeof(ExamManagementContext))]
    partial class ExamManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExamManagement.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("admin_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("full_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.HasKey("AdminId")
                        .HasName("PK__Admin__43AA414151B566A3");

                    b.HasIndex(new[] { "Email" }, "UQ__Admin__AB6E6164405294DF")
                        .IsUnique()
                        .HasFilter("[email] IS NOT NULL");

                    b.HasIndex(new[] { "Username" }, "UQ__Admin__F3DBC572EFE37F90")
                        .IsUnique();

                    b.ToTable("Admin", (string)null);
                });

            modelBuilder.Entity("ExamManagement.Models.Answer", b =>
                {
                    b.Property<int>("AnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("answer_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnswerId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit")
                        .HasColumnName("is_correct");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("int")
                        .HasColumnName("question_id");

                    b.HasKey("AnswerId")
                        .HasName("PK__Answers__33724318B800FC4D");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("ExamManagement.Models.Exam", b =>
                {
                    b.Property<int>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("exam_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExamId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<int>("Duration")
                        .HasColumnType("int")
                        .HasColumnName("duration");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("subject_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("title");

                    b.HasKey("ExamId")
                        .HasName("PK__Exams__9C8C7BE9DB668693");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("SubjectId");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("ExamManagement.Models.ExamAnswers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExamId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ExamAnswers");
                });

            modelBuilder.Entity("ExamManagement.Models.ExamResult", b =>
                {
                    b.Property<int>("ResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("result_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResultId"));

                    b.Property<int?>("ExamId")
                        .HasColumnType("int")
                        .HasColumnName("exam_id");

                    b.Property<decimal?>("Score")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("score");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("student_id");

                    b.Property<DateTime?>("SubmittedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("submitted_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("ResultId")
                        .HasName("PK__Exam_Res__AFB3C3162132D5F4");

                    b.HasIndex("ExamId");

                    b.HasIndex("StudentId");

                    b.ToTable("Exam_Results", (string)null);
                });

            modelBuilder.Entity("ExamManagement.Models.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("question_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("level");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("subject_id");

                    b.HasKey("QuestionId")
                        .HasName("PK__Question__2EC21549AE69F3C3");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("SubjectId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("ExamManagement.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("student_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("full_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("School")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("username");

                    b.HasKey("StudentId")
                        .HasName("PK__Student__2A33069AAD05E108");

                    b.HasIndex(new[] { "Email" }, "UQ__Student__AB6E616429896513")
                        .IsUnique()
                        .HasFilter("[email] IS NOT NULL");

                    b.HasIndex(new[] { "Username" }, "UQ__Student__F3DBC572BA58153D")
                        .IsUnique();

                    b.ToTable("Student", (string)null);
                });

            modelBuilder.Entity("ExamManagement.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("subject_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("subject_name");

                    b.HasKey("SubjectId")
                        .HasName("PK__Subjects__5004F6604ECC56C4");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("ExamQuestion", b =>
                {
                    b.Property<int>("ExamId")
                        .HasColumnType("int")
                        .HasColumnName("exam_id");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int")
                        .HasColumnName("question_id");

                    b.HasKey("ExamId", "QuestionId")
                        .HasName("PK__Exam_Que__1E605ABDAA2E4E9A");

                    b.HasIndex("QuestionId");

                    b.ToTable("Exam_Question", (string)null);
                });

            modelBuilder.Entity("ExamManagement.Models.Answer", b =>
                {
                    b.HasOne("ExamManagement.Models.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .HasConstraintName("FK__Answers__questio__44FF419A");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("ExamManagement.Models.Exam", b =>
                {
                    b.HasOne("ExamManagement.Models.Admin", "CreatedByNavigation")
                        .WithMany("Exams")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK__Exams__created_b__49C3F6B7");

                    b.HasOne("ExamManagement.Models.Subject", "Subject")
                        .WithMany("Exams")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK__Exams__subject_i__47DBAE45");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("ExamManagement.Models.ExamResult", b =>
                {
                    b.HasOne("ExamManagement.Models.Exam", "Exam")
                        .WithMany("ExamResults")
                        .HasForeignKey("ExamId")
                        .HasConstraintName("FK__Exam_Resu__exam___5165187F");

                    b.HasOne("ExamManagement.Models.Student", "Student")
                        .WithMany("ExamResults")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK__Exam_Resu__stude__5070F446");

                    b.Navigation("Exam");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ExamManagement.Models.Question", b =>
                {
                    b.HasOne("ExamManagement.Models.Admin", "CreatedByNavigation")
                        .WithMany("Questions")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK__Questions__creat__4222D4EF");

                    b.HasOne("ExamManagement.Models.Subject", "Subject")
                        .WithMany("Questions")
                        .HasForeignKey("SubjectId")
                        .HasConstraintName("FK__Questions__subje__403A8C7D");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("ExamQuestion", b =>
                {
                    b.HasOne("ExamManagement.Models.Exam", null)
                        .WithMany()
                        .HasForeignKey("ExamId")
                        .IsRequired()
                        .HasConstraintName("FK__Exam_Ques__exam___4CA06362");

                    b.HasOne("ExamManagement.Models.Question", null)
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .IsRequired()
                        .HasConstraintName("FK__Exam_Ques__quest__4D94879B");
                });

            modelBuilder.Entity("ExamManagement.Models.Admin", b =>
                {
                    b.Navigation("Exams");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("ExamManagement.Models.Exam", b =>
                {
                    b.Navigation("ExamResults");
                });

            modelBuilder.Entity("ExamManagement.Models.Question", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("ExamManagement.Models.Student", b =>
                {
                    b.Navigation("ExamResults");
                });

            modelBuilder.Entity("ExamManagement.Models.Subject", b =>
                {
                    b.Navigation("Exams");

                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
